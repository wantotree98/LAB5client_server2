import socket
import os
import threading
import sys
import tqdm

clientSocket = socket.socket()


SEPARATOR = '<SEPARATOR>'
BUFFER_SIZE = 4096

host='192.168.43.219'
port = 5000
filename = 'test1.txt'
filesize = os.path.getsize(filename)

print(f'[+] Connecting to {host}:{port}')
clientSocket.connect((host, port))
print('[+] Connected.')

clientSocket.send(f'{filename}{SEPARATOR}{filesize}'.encode())

progress = tqdm.tqdm(range(filesize), f"Sending {filename}", unit="B",
			unit_scale=True, unit_divisor=1024)
with open(filename, "rb") as f:
    for _ in progress:

        bytes_read = f.read(BUFFER_SIZE)
        if not bytes_read:
            le transmitting is done
            break
        # we use sendall to assure transimission in 
        # busy networks
        s.sendall(bytes_read)
        # update the progress bar
        progress.update(len(bytes_read))
# close the socket
s.close()
